{"version":3,"sources":["jquery-modern-form.js"],"names":["$","window","document","undefined","Plugin","element","options","this","_name","pluginName","_defaults","fn","defaults","extend","init","prototype","buildCache","bindEvents","destroy","unbindEvents","$element","removeData","plugin","$input","find","inputSelector","on","focus","event","focusInput","target","blur","blurInput","each","val","parent","addClass","classLabel","off","$target","classFocus","$parent","removeClass","data","jQuery"],"mappings":";;;;;;CAQC,SAAUA,EAAGC,EAAQC,EAAUC,GAC/B,YAOA,SAASC,GAAOC,EAASC,GACxBC,KAAKF,QAAUA,EACfE,KAAKC,MAAQC,EACbF,KAAKG,UAAYV,EAAEW,GAAGF,GAAYG,SAClCL,KAAKD,QAAUN,EAAEa,UAAYN,KAAKG,UAAWJ,GAE7CC,KAAKO,OAXN,GAAIL,GAAa,YAiBjBT,GAAEa,OAAOT,EAAOW,WAGfD,KAAM,WACLP,KAAKS,aACLT,KAAKU,cAONC,QAAS,WACRX,KAAKY,eACLZ,KAAKa,SAASC,cAOfL,WAAY,WACXT,KAAKa,SAAWpB,EAAEO,KAAKF,UAMxBY,WAAY,WACX,GAAIK,GAASf,KACZgB,EAASvB,EAAEsB,EAAOF,UAAUI,KAAKF,EAAOhB,QAAQmB,cAEjDF,GACEG,IACAC,MAAS,SAASC,GACjBN,EAAOO,WAAW7B,EAAE4B,EAAME,UAG3BC,KAAQ,SAASH,GAChBN,EAAOU,UAAUhC,EAAE4B,EAAME,YAG1BG,KAAK,WACiB,KAAlBjC,EAAEO,MAAM2B,OACXlC,EAAEO,MAAM4B,SAASC,SAASd,EAAOhB,QAAQ+B,eAQ7ClB,aAAc,WACbZ,KAAKa,SAASkB,IAAI,IAAM/B,KAAKC,QAM9BqB,WAAY,SAASU,GACpBA,EAAQJ,SAASC,SAAS7B,KAAKD,QAAQkC,WAAa,IAAMjC,KAAKD,QAAQ+B,aAMxEL,UAAW,SAASO,GACnB,GAAIE,GAAUF,EAAQJ,QAEA,MAAlBI,EAAQL,OACXO,EAAQC,YAAYnC,KAAKD,QAAQ+B,YAGlCI,EAAQC,YAAYnC,KAAKD,QAAQkC,eAQnCxC,EAAEW,GAAGF,GAAc,SAASH,GAM3B,MALAC,MAAK0B,KAAK,WACJjC,EAAE2C,KAAMpC,KAAM,UAAYE,IAC9BT,EAAE2C,KAAMpC,KAAM,UAAYE,EAAY,GAAIL,GAAQG,KAAMD,MAGnDC,MAMRP,EAAEW,GAAGF,GAAYG,UAChBa,cAAe,cACfe,WAAY,oBACZH,WAAY,sBAGVO,OAAQ3C,OAAQC","file":"jquery-modern-form.min.js","sourcesContent":["/*!\r\n * A simple handler for forms that add classes on your forms, so you can play with CSS.\r\n * Version : 3.0\r\n * Emmanuel B. (www.emmanuelbeziat.com)\r\n * https://github.com/EmmanuelBeziat/jquery-modern-form\r\n **/\r\n\r\n\r\n;(function($, window, document, undefined) {\r\n\t'use strict';\r\n\r\n\tvar pluginName = 'modernForm';\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tfunction Plugin(element, options) {\r\n\t\tthis.element = element;\r\n\t\tthis._name = pluginName;\r\n\t\tthis._defaults = $.fn[pluginName].defaults;\r\n\t\tthis.options = $.extend( {}, this._defaults, options );\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Methods\r\n\t */\r\n\t$.extend(Plugin.prototype, {\r\n\r\n\t\t// Initialization logic\r\n\t\tinit: function() {\r\n\t\t\tthis.buildCache();\r\n\t\t\tthis.bindEvents();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove plugin instance\r\n\t\t * Example: $('selector').data('tabs').destroy();\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.unbindEvents();\r\n\t\t\tthis.$element.removeData();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Create variables that can be accessed by other functions\r\n\t\t * Useful for DOM performances\r\n\t\t */\r\n\t\tbuildCache: function() {\r\n\t\t\tthis.$element = $(this.element);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Attach actions to events\r\n\t\t */\r\n\t\tbindEvents: function() {\r\n\t\t\tvar plugin = this,\r\n\t\t\t\t$input = $(plugin.$element).find(plugin.options.inputSelector);\r\n\r\n\t\t\t$input\r\n\t\t\t\t.on({\r\n\t\t\t\t\t'focus': function(event) {\r\n\t\t\t\t\t\tplugin.focusInput($(event.target));\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t'blur': function(event) {\r\n\t\t\t\t\t\tplugin.blurInput($(event.target));\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.each(function() {\r\n\t\t\t\t\tif ($(this).val() !== '') {\r\n\t\t\t\t\t\t$(this).parent().addClass(plugin.options.classLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove actions from events\r\n\t\t */\r\n\t\tunbindEvents: function() {\r\n\t\t\tthis.$element.off('.' + this._name);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When an item get the focus\r\n\t\t */\r\n\t\tfocusInput: function($target) {\r\n\t\t\t$target.parent().addClass(this.options.classFocus + ' ' + this.options.classLabel);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * When an item lose the focus\r\n\t\t */\r\n\t\tblurInput: function($target) {\r\n\t\t\tvar $parent = $target.parent();\r\n\r\n\t\t\tif ($target.val() === '') {\r\n\t\t\t\t$parent.removeClass(this.options.classLabel);\r\n\t\t\t}\r\n\r\n\t\t\t$parent.removeClass(this.options.classFocus);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t/**\r\n\t * jQuery plugin wrapper\r\n\t */\r\n\t$.fn[pluginName] = function(options) {\r\n\t\tthis.each(function() {\r\n\t\t\tif (!$.data( this, \"plugin_\" + pluginName)) {\r\n\t\t\t\t$.data( this, \"plugin_\" + pluginName, new Plugin( this, options ) );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Plugin options and their default values\r\n\t */\r\n\t$.fn[pluginName].defaults = {\r\n\t\tinputSelector: '.form-input',\r\n\t\tclassFocus: 'form-group--focus',\r\n\t\tclassLabel: 'form-group--label'\r\n\t};\r\n\r\n})( jQuery, window, document );"],"sourceRoot":"/source/"}
{"version":3,"sources":["modern-form.js"],"names":["extendDefaults","source","properties","property","hasOwnProperty","build","list","slice","call","this","input","plugin","forEach","element","value","parentNode","classList","add","options","classHasContent","addEventListener","inputFocus","bind","inputBlur","ModernForm","defaults","inputSelector","classHasFocus","form","arguments","prototype","init","querySelectorAll","remove"],"mappings":";;;;;;CAMA,WAmCC,QAASA,GAAeC,EAAQC,GAC/B,GAAIC,EAEJ,KAAKA,IAAYD,GACZA,EAAWE,eAAeD,KAC7BF,EAAOE,GAAYD,EAAWC,GAIhC,OAAOF,GAGR,QAASI,KACR,GAAIC,MAAUC,MAAMC,KAAKC,KAAKC,OAC1BC,EAASF,IAEbH,GAAKM,QAAQ,SAASC,GACjB,KAAOA,EAAQC,OAClBD,EAAQE,WAAWC,UAAUC,IAAIN,EAAOO,QAAQC,iBAG7CN,IACHA,EAAQO,iBAAiB,QAAST,EAAOU,WAAWC,MAAMT,QAASA,EAASF,OAAQA,KACpFE,EAAQO,iBAAiB,OAAQT,EAAOY,UAAUD,MAAMT,QAASA,EAASF,OAAQA,QAxDrFF,KAAKe,WAAa,WACjB,YAEA,IAAIC,IACHC,cAAe,cACfC,cAAe,wBACfR,gBAAiB,0BAGlBV,MAAKmB,KAAO,KACZnB,KAAKC,MAAQ,KACbD,KAAKS,QAAUlB,EAAeyB,EAAUI,UAAU,KAGnDL,WAAWM,UAAUC,KAAO,SAASlB,GACpCJ,KAAKmB,KAAOf,EACZJ,KAAKC,MAAQG,EAAQmB,iBAAiBvB,KAAKS,QAAQQ,eAEnDrB,EAAMG,KAAKC,OAGZe,WAAWM,UAAUT,WAAa,WACjCZ,KAAKI,QAAQE,WAAWC,UAAUC,IAAIR,KAAKE,OAAOO,QAAQS,cAAelB,KAAKE,OAAOO,QAAQC,kBAG9FK,WAAWM,UAAUP,UAAY,WAC5B,KAAOd,KAAKI,QAAQC,OACvBL,KAAKI,QAAQE,WAAWC,UAAUiB,OAAOxB,KAAKE,OAAOO,QAAQC,iBAG9DV,KAAKI,QAAQE,WAAWC,UAAUiB,OAAOxB,KAAKE,OAAOO,QAAQS","file":"modern-form.min.js","sourcesContent":["/*!\n * A simple handler for forms that add classes on your forms, so you can play with CSS.\n * Version : 4.0\n * Emmanuel B. (www.emmanuelbeziat.com)\n * https://github.com/EmmanuelBeziat/js-modern-form\n **/\n(function() {\n\n\tthis.ModernForm = function() {\n\t\t'use strict';\n\n\t\tvar defaults = {\n\t\t\tinputSelector: '.form-input',\n\t\t\tclassHasFocus: 'form-group--has-focus',\n\t\t\tclassHasContent: 'form-group--has-content'\n\t\t};\n\n\t\tthis.form = null;\n\t\tthis.input = null;\n\t\tthis.options = extendDefaults(defaults, arguments[0]);\n\t}\n\n\tModernForm.prototype.init = function(element) {\n\t\tthis.form = element;\n\t\tthis.input = element.querySelectorAll(this.options.inputSelector);\n\n\t\tbuild.call(this);\n\t}\n\n\tModernForm.prototype.inputFocus = function() {\n\t\tthis.element.parentNode.classList.add(this.plugin.options.classHasFocus, this.plugin.options.classHasContent);\n\t}\n\n\tModernForm.prototype.inputBlur = function() {\n\t\tif ('' === this.element.value) {\n\t\t\tthis.element.parentNode.classList.remove(this.plugin.options.classHasContent);\n\t\t}\n\n\t\tthis.element.parentNode.classList.remove(this.plugin.options.classHasFocus);\n\t}\n\n\tfunction extendDefaults(source, properties) {\n\t\tvar property;\n\n\t\tfor (property in properties) {\n\t\t\tif (properties.hasOwnProperty(property)) {\n\t\t\t\tsource[property] = properties[property];\n\t\t\t}\n\t\t}\n\n\t\treturn source;\n\t}\n\n\tfunction build() {\n\t\tvar list = [].slice.call(this.input);\n\t\tvar plugin = this;\n\n\t\tlist.forEach(function(element) {\n\t\t\tif ('' !== element.value) {\n\t\t\t\telement.parentNode.classList.add(plugin.options.classHasContent);\n\t\t\t}\n\n\t\t\tif (element) {\n\t\t\t\telement.addEventListener('focus', plugin.inputFocus.bind({element: element, plugin: plugin}));\n\t\t\t\telement.addEventListener('blur', plugin.inputBlur.bind({element: element, plugin: plugin}));\n\t\t\t}\n\t\t});\n\t}\n\n})();"],"sourceRoot":"/source/"}